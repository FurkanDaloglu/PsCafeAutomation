<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>